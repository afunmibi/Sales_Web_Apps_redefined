CREATE TABLE sales (
    id INT AUTO_INCREMENT PRIMARY KEY,
    transaction_id VARCHAR(100),
    product VARCHAR(255),
    price DECIMAL(10,2),
    quantity INT,
    subtotal DECIMAL(10,2),
    sale_date DATE
);
CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(100),
    username VARCHAR(100) UNIQUE,
    password VARCHAR(255),
    role ENUM('admin', 'manager', 'cashier') NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create the database
CREATE DATABASE IF NOT EXISTS supermarket_db;

-- Use the newly created database
USE supermarket_db;

-- Table for users (admins, managers, cashiers)
CREATE TABLE IF NOT EXISTS users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    password_hash VARCHAR(255) NOT NULL, -- Store hashed passwords, not plain text!
    role ENUM('admin', 'manager', 'cashier') NOT NULL DEFAULT 'cashier',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Table for transactions (main sales record)
CREATE TABLE IF NOT EXISTS transactions (
    id INT AUTO_INCREMENT PRIMARY KEY,
    cashier_name VARCHAR(100) NOT NULL,
    transaction_date DATETIME NOT NULL,
    total_amount DECIMAL(10, 2) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Table for individual sale items within a transaction
CREATE TABLE IF NOT EXISTS sale_items (
    id INT AUTO_INCREMENT PRIMARY KEY,
    transaction_id INT NOT NULL,
    product_name VARCHAR(255) NOT NULL,
    price DECIMAL(10, 2) NOT NULL,
    quantity INT NOT NULL,
    subtotal DECIMAL(10, 2) NOT NULL,
    FOREIGN KEY (transaction_id) REFERENCES transactions(id) ON DELETE CASCADE
);

-- Optional: Table for products (if you want predefined products with inventory)
-- You might also manage inventory within this table.
CREATE TABLE IF NOT EXISTS products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) UNIQUE NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT NOT NULL DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

-- Insert some initial users (example: admin, manager, cashier)
-- Remember to hash passwords securely for real deployment!
-- For initial setup, you can use password_hash('your_password', PASSWORD_DEFAULT) in PHP
-- Example: password_hash('adminpass', PASSWORD_DEFAULT)
INSERT INTO users (username, password_hash, role) VALUES
('admin', '$2y$10$YourActualHashedPasswordHereForAdmin', 'admin'),
('manager', '$2y$10$YourActualHashedPasswordHereForManager', 'manager'),
('cashier1', '$2y$10$YourActualHashedPasswordHereForCashier1', 'cashier');

-- Insert some example products (if using a products table)
INSERT INTO products (name, description, price, stock_quantity) VALUES
('Coca-Cola 50cl', 'Soft drink', 250.00, 500),
('Peak Milk (Small)', 'Powdered milk sachet', 150.00, 300),
('Indomie Noodles (Hungry Man)', 'Instant noodles', 400.00, 200),
('Detergent Powder (1kg)', 'Washing powder', 1200.00, 100);

CREATE TABLE IF NOT EXISTS products (
    id INT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) UNIQUE NOT NULL,
    description TEXT,
    price DECIMAL(10, 2) NOT NULL,
    stock_quantity INT NOT NULL DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);